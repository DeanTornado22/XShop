[{"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\index.js":"1","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\App.js":"2","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\components\\Footer.js":"3","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\screens\\HomeScreen.js":"4","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\components\\Header.js":"5","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\screens\\ProductScreen.js":"6","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\components\\Product.js":"7","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\components\\Rating.js":"8","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\store.js":"9","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\reducers\\productReducers.js":"10","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\constants\\productConstants.js":"11","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\actions\\productActions.js":"12","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\components\\Message.js":"13","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\components\\Loader.js":"14","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\screens\\CartScreen.js":"15","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\reducers\\cartReducers.js":"16","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\constants\\cartConstants.js":"17","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\actions\\cartActions.js":"18","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\reducers\\userReducers.js":"19","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\constants\\userConstants.js":"20","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\screens\\LoginScreen.js":"21","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\components\\FormContainer.js":"22","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\actions\\userActions.js":"23","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\screens\\RegisterScreen.js":"24","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\screens\\ProfileScreen.js":"25","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\screens\\ShippingScreen.js":"26","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\components\\CheckoutSteps.js":"27","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\screens\\PaymentScreen.js":"28","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\screens\\PlaceOrderScreen.js":"29","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\reducers\\orderReducers.js":"30","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\actions\\orderActions.js":"31","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\constants\\orderConstants.js":"32","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\screens\\OrderScreen.js":"33","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\components\\SearchBox.js":"34","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\components\\Paginate.js":"35"},{"size":537,"mtime":1607232784567,"results":"36","hashOfConfig":"37"},{"size":1886,"mtime":1607751341550,"results":"38","hashOfConfig":"37"},{"size":363,"mtime":1607024146651,"results":"39","hashOfConfig":"37"},{"size":1415,"mtime":1607750478738,"results":"40","hashOfConfig":"37"},{"size":2005,"mtime":1607748174188,"results":"41","hashOfConfig":"37"},{"size":3915,"mtime":1607263852262,"results":"42","hashOfConfig":"37"},{"size":848,"mtime":1607082555426,"results":"43","hashOfConfig":"37"},{"size":1796,"mtime":1607076847026,"results":"44","hashOfConfig":"37"},{"size":1768,"mtime":1607729667798,"results":"45","hashOfConfig":"37"},{"size":1134,"mtime":1607749295485,"results":"46","hashOfConfig":"37"},{"size":366,"mtime":1607249689333,"results":"47","hashOfConfig":"37"},{"size":1300,"mtime":1607749131669,"results":"48","hashOfConfig":"37"},{"size":248,"mtime":1607243506194,"results":"49","hashOfConfig":"37"},{"size":405,"mtime":1607243399243,"results":"50","hashOfConfig":"37"},{"size":3749,"mtime":1607279665187,"results":"51","hashOfConfig":"37"},{"size":1169,"mtime":1607537462329,"results":"52","hashOfConfig":"37"},{"size":238,"mtime":1607537335017,"results":"53","hashOfConfig":"37"},{"size":1251,"mtime":1607537424832,"results":"54","hashOfConfig":"37"},{"size":2023,"mtime":1607731417588,"results":"55","hashOfConfig":"37"},{"size":906,"mtime":1607731330837,"results":"56","hashOfConfig":"37"},{"size":2303,"mtime":1607370544757,"results":"57","hashOfConfig":"37"},{"size":347,"mtime":1607368854332,"results":"58","hashOfConfig":"37"},{"size":3652,"mtime":1607731585845,"results":"59","hashOfConfig":"37"},{"size":3243,"mtime":1607770726397,"results":"60","hashOfConfig":"37"},{"size":5603,"mtime":1607731051922,"results":"61","hashOfConfig":"37"},{"size":2778,"mtime":1607536461366,"results":"62","hashOfConfig":"37"},{"size":1286,"mtime":1607536372569,"results":"63","hashOfConfig":"37"},{"size":1807,"mtime":1607537756748,"results":"64","hashOfConfig":"37"},{"size":5506,"mtime":1607700711715,"results":"65","hashOfConfig":"37"},{"size":2475,"mtime":1607732469297,"results":"66","hashOfConfig":"37"},{"size":3444,"mtime":1607729886120,"results":"67","hashOfConfig":"37"},{"size":804,"mtime":1607731235269,"results":"68","hashOfConfig":"37"},{"size":6707,"mtime":1607727227257,"results":"69","hashOfConfig":"37"},{"size":777,"mtime":1607747944463,"results":"70","hashOfConfig":"37"},{"size":695,"mtime":1607751234424,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"8693im",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\index.js",[],["151","152"],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\App.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\components\\Footer.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\screens\\HomeScreen.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\components\\Header.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\screens\\ProductScreen.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\components\\Product.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\components\\Rating.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\store.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\reducers\\productReducers.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\constants\\productConstants.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\actions\\productActions.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\components\\Message.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\components\\Loader.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\screens\\CartScreen.js",["153","154"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  ListGroupItem,\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\nimport Product from '../components/Product'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty<Link to='/'> GO BACK</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroupItem>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\reducers\\cartReducers.js",["155"],"import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n      const exitItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n      if (exitItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === exitItem.product ? item : x\r\n          ),\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        }\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product != action.payload),\r\n      }\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      }\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\constants\\cartConstants.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\actions\\cartActions.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\reducers\\userReducers.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\constants\\userConstants.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\screens\\LoginScreen.js",["156","157"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Col, Row, Form, Button, FormGroup, FormLabel } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\nimport { userLoginReducer } from '../reducers/userReducers'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const dispatch = useDispatch()\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    // DISPATCH LOGIN\r\n    dispatch(login(email, password))\r\n  }\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <FormLabel>Email Address</FormLabel>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter Email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='password'>\r\n          <FormLabel>Password</FormLabel>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\components\\FormContainer.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\actions\\userActions.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\screens\\RegisterScreen.js",["158"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Col, Row, Form, Button, FormGroup, FormLabel } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const dispatch = useDispatch()\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Password do not match')\r\n    } else {\r\n      // DISPATCH REGISTER\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <FormLabel>Name</FormLabel>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter Name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='email'>\r\n          <FormLabel>Email Address</FormLabel>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter Email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='password'>\r\n          <FormLabel>Password</FormLabel>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='confirmPassword'>\r\n          <FormLabel>Confirm Password</FormLabel>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\screens\\ProfileScreen.js",["159","160"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Col,\r\n  Row,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  FormLabel,\r\n  Table,\r\n} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrder } from '../actions/orderActions'\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      console.log(user)\r\n      if (!user.name) {\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(listMyOrder())\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user])\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Password do not match')\r\n    } else {\r\n      // DISPATCH UPDATE PROFILE\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <FormLabel>Name</FormLabel>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Enter Name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='email'>\r\n            <FormLabel>Email Address</FormLabel>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter Email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='password'>\r\n            <FormLabel>Password</FormLabel>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='confirmPassword'>\r\n            <FormLabel>Confirm Password</FormLabel>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm password'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>${order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.delieveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\screens\\PlaceOrderScreen.js",["161","162","163"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\r\nimport { orderCreateReducer } from '../reducers/orderReducers'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n\r\n  if (!cart.shippingAddress.address) {\r\n    history.push('/shipping')\r\n  } else if (!cart.paymentMethod) {\r\n    history.push('/payment')\r\n  }\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  )\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2)\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\reducers\\orderReducers.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\actions\\orderActions.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\constants\\orderConstants.js",[],["164","165"],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\screens\\OrderScreen.js",["166","167","168"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  ListGroupItem,\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder } from '../actions/orderActions'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { ORDER_PAY_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match }) => {\r\n  const orderId = match.params.id\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n\r\n  const { order, loading, error } = orderDetails\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { user } = userDetails\r\n\r\n  if (!loading) {\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n    if (!order || successPay) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n    dispatch(getUserDetails('profile'))\r\n  }, [dispatch, orderId, successPay, order])\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    console.log(orderId)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong>\r\n                {user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email:</strong>{' '}\r\n                <a href={`mailto:${user.email}`}>{user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\components\\SearchBox.js",[],"C:\\Users\\deanl\\Desktop\\React final project\\Final-project---StockX-Web\\FrontEnd\\src\\components\\Paginate.js",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":15,"column":8,"nodeType":"175","messageId":"176","endLine":15,"endColumn":14},{"ruleId":"173","severity":1,"message":"177","line":17,"column":8,"nodeType":"175","messageId":"176","endLine":17,"endColumn":15},{"ruleId":"178","severity":1,"message":"179","line":33,"column":60,"nodeType":"180","messageId":"181","endLine":33,"endColumn":62},{"ruleId":"173","severity":1,"message":"182","line":3,"column":34,"nodeType":"175","messageId":"176","endLine":3,"endColumn":43},{"ruleId":"173","severity":1,"message":"183","line":9,"column":10,"nodeType":"175","messageId":"176","endLine":9,"endColumn":26},{"ruleId":"173","severity":1,"message":"182","line":3,"column":34,"nodeType":"175","messageId":"176","endLine":3,"endColumn":43},{"ruleId":"173","severity":1,"message":"184","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":14},{"ruleId":"173","severity":1,"message":"182","line":8,"column":3,"nodeType":"175","messageId":"176","endLine":8,"endColumn":12},{"ruleId":"173","severity":1,"message":"185","line":8,"column":10,"nodeType":"175","messageId":"176","endLine":8,"endColumn":28},{"ruleId":"173","severity":1,"message":"186","line":9,"column":10,"nodeType":"175","messageId":"176","endLine":9,"endColumn":28},{"ruleId":"173","severity":1,"message":"187","line":10,"column":10,"nodeType":"175","messageId":"176","endLine":10,"endColumn":28},{"ruleId":"169","replacedBy":"188"},{"ruleId":"171","replacedBy":"189"},{"ruleId":"173","severity":1,"message":"190","line":6,"column":3,"nodeType":"175","messageId":"176","endLine":6,"endColumn":9},{"ruleId":"173","severity":1,"message":"191","line":12,"column":3,"nodeType":"175","messageId":"176","endLine":12,"endColumn":16},{"ruleId":"173","severity":1,"message":"192","line":18,"column":26,"nodeType":"175","messageId":"176","endLine":18,"endColumn":43},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'Loader' is defined but never used.","Identifier","unusedVar","'Product' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'FormGroup' is defined but never used.","'userLoginReducer' is defined but never used.","'Link' is defined but never used.","'ORDER_CREATE_RESET' is defined but never used.","'USER_DETAILS_RESET' is defined but never used.","'orderCreateReducer' is defined but never used.",["193"],["194"],"'Button' is defined but never used.","'ListGroupItem' is defined but never used.","'updateUserProfile' is defined but never used.","no-global-assign","no-unsafe-negation"]